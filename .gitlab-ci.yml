variables:
    GIT_SUBMODULE_STRATEGY: "recursive"
    ANDROID_NDK: "~/develop/android-ndk"

before_script:
    - git lfs fetch
    - git lfs checkout

after_script:
    - echo log-after_script

stages:
    - build
    - package
    - deploy

compile.windows.vs2019:
    stage: build
    script:
        - 'if exist output rmdir /s /q output'
        - 'cd external/libgltf'
        - 'if exist build rmdir /s /q build'
        - 'mkdir build && cd build'
        - 'mkdir vs2019 && cd vs2019'
        - 'call "%VS160COMNTOOLS%VsDevCmd.bat"'
        - 'mkdir win32 && cd win32'
        - '"%CMAKE_BIN_PATH%\cmake.exe" -G "Visual Studio 16 2019" -A "Win32" -DLIBGLTF_CHARACTOR_ENCODING=UTF8 -DCUSTOM_OUT_PATH="%CD%\output" ../../../'
        - 'msbuild source\libgltf\libgltf.vcxproj /t:Build /p:Configuration="Release" /p:Platform="Win32"'
        - 'msbuild source\libgltf\libgltf.vcxproj /t:Build /p:Configuration="Debug" /p:Platform="Win32"'
        - 'cd ../'
        - 'mkdir win64 && cd win64'
        - '"%CMAKE_BIN_PATH%\cmake.exe" -G "Visual Studio 16 2019" -A "x64" -DLIBGLTF_CHARACTOR_ENCODING=UTF8 -DCUSTOM_OUT_PATH="%CD%\output" ../../../'
        - 'msbuild source\libgltf\libgltf.vcxproj /t:Build /p:Configuration="Release" /p:Platform="x64"'
        - 'msbuild source\libgltf\libgltf.vcxproj /t:Build /p:Configuration="Debug" /p:Platform="x64"'
        - 'cd ../'
        - 'cd ../'
        - 'cd ../'
        - 'cd ../../'
        - 'xcopy external\libgltf\build\vs2019\win32\output\lib\win32\Release\*.lib output\lib\win32\vs2019\Release\ /s /r /y'
        - 'xcopy external\libgltf\build\vs2019\win32\output\lib\win32\Debug\*.lib output\lib\win32\vs2019\Debug\ /s /r /y'
        - 'xcopy external\libgltf\build\vs2019\win64\output\lib\win64\Release\*.lib output\lib\win64\vs2019\Release\ /s /r /y'
        - 'xcopy external\libgltf\build\vs2019\win64\output\lib\win64\Debug\*.lib output\lib\win64\vs2019\Debug\ /s /r /y'
    artifacts:
        name: "libgltf.windows.vs2019.%CI_PIPELINE_ID%.%CI_JOB_ID%"
        expire_in: 1 month
        paths:
            - output\lib\*
    tags:
        - win32
        - win64
        - cmake
        - vs2019

compile.linux:
    stage: build
    script:
        - 'rm -rf output'
        - 'cd external/libgltf'
        - 'rm -rf build'
        - 'rm -rf output'
        - 'mkdir build && cd build'
        - 'cmake -G "Unix Makefiles" -DLIBGLTF_CHARACTOR_ENCODING=UTF8 ../'
        - 'make libgltf'
        - 'cd ../../../'
        - 'mkdir -p output/lib/linux'
        - 'cp -v external/libgltf/output/lib/linux/libgltf.a output/lib/linux/'
    artifacts:
        name: "libgltf.linux.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - output/lib/*
    tags:
        - linux
        - gcc
        - cmake
        - make

compile.macos:
    stage: build
    script:
        - 'rm -rf output'
        - 'cd external/libgltf'
        - 'rm -rf build'
        - 'rm -rf output'
        - 'mkdir build && cd build'
        - 'cmake -G "Unix Makefiles" -DLIBGLTF_CHARACTOR_ENCODING=UTF8 ../'
        - 'make libgltf'
        - 'cd ../../../'
        - 'mkdir -p output/lib/macos/'
        - 'cp -v external/libgltf/output/lib/macos/libgltf.a output/lib/macos/'
    artifacts:
        name: "libgltf.macos.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - output/lib/*
    tags:
        - macos
        - gcc
        - cmake
        - make

compile.android:
    stage: build
    script:
        - 'rm -rf output'
        - 'cd external/libgltf'
        - 'mkdir build && cd build'
        - 'mkdir armeabi-v7a && cd armeabi-v7a'
        - 'cmake -G "Ninja" -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=armeabi-v7a -DANDROID_ARM_NEON=OFF -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=19 -DANDROID_TOOLCHAIN=clang ../../'
        - 'ninja libgltf'
        - 'cd ../'
        - 'mkdir armeabi-v7a-with-neon && cd armeabi-v7a-with-neon'
        - 'cmake -G "Ninja" -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=armeabi-v7a -DANDROID_ARM_NEON=ON -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=19 -DANDROID_TOOLCHAIN=clang ../../'
        - 'ninja libgltf'
        - 'cd ../'
        - 'mkdir arm64-v8a && cd arm64-v8a'
        - 'cmake -G "Ninja" -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=19 -DANDROID_TOOLCHAIN=clang ../../'
        - 'ninja libgltf'
        - 'cd ../'
        - 'mkdir x86 && cd x86'
        - 'cmake -G "Ninja" -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86 -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=19 -DANDROID_TOOLCHAIN=clang ../../'
        - 'ninja libgltf'
        - 'cd ../'
        - 'mkdir x86_64 && cd x86_64'
        - 'cmake -G "Ninja" -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86_64 -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=19 -DANDROID_TOOLCHAIN=clang ../../'
        - 'ninja libgltf'
        - 'cd ../'
        - 'cd ../'
        - 'cd ../../'
        - 'mkdir -p output/lib/android/armeabi-v7a/'
        - 'cp -v external/libgltf/output/lib/android/armeabi-v7a/libgltf.a output/lib/android/armeabi-v7a/'
        - 'mkdir -p output/lib/android/armeabi-v7a-with-neon/'
        - 'cp -v external/libgltf/output/lib/android/armeabi-v7a-with-neon/libgltf.a output/lib/android/armeabi-v7a-with-neon/'
        - 'mkdir -p output/lib/android/arm64-v8a/'
        - 'cp -v external/libgltf/output/lib/android/arm64-v8a/libgltf.a output/lib/android/arm64-v8a/'
        - 'mkdir -p output/lib/android/x86/'
        - 'cp -v external/libgltf/output/lib/android/x86/libgltf.a output/lib/android/x86/'
        - 'mkdir -p output/lib/android/x86_64/'
        - 'cp -v external/libgltf/output/lib/android/x86_64/libgltf.a output/lib/android/x86_64/'
    artifacts:
        name: "libgltf.android.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - output/lib/*
    tags:
        - linux
        - android
        - cmake
        - ninja

compile.ios:
    stage: build
    script:
        - 'rm -rf output'
        - 'cd external/libgltf'
        - 'rm -rf build'
        - 'rm -rf output'
        - 'mkdir build && cd build'
        - 'mkdir os && cd os'
        - 'cmake -DCMAKE_TOOLCHAIN_FILE="../../external/ios-cmake/toolchain/iOS.cmake" -DIOS_PLATFORM=OS -DLIBGLTF_PLATFORM_IOS=TRUE -DLIBGLTF_CHARACTOR_ENCODING=UTF8 -DCUSTOM_OUT_PATH="../../output/" ../../'
        - 'make libgltf'
        - 'cd ../'
        - 'mkdir simulator && cd simulator'
        - 'cmake -DCMAKE_TOOLCHAIN_FILE="../../external/ios-cmake/toolchain/iOS.cmake" -DIOS_PLATFORM=SIMULATOR -DLIBGLTF_PLATFORM_IOS=TRUE -DLIBGLTF_CHARACTOR_ENCODING=UTF8 -DCUSTOM_OUT_PATH="../../output/" ../../'
        - 'make libgltf'
        - 'cd ../'
        - 'mkdir watchos && cd watchos'
        - 'cmake -DCMAKE_TOOLCHAIN_FILE="../../external/ios-cmake/toolchain/iOS.cmake" -DIOS_PLATFORM=WATCHOS -DLIBGLTF_PLATFORM_IOS=TRUE -DLIBGLTF_CHARACTOR_ENCODING=UTF8 -DCUSTOM_OUT_PATH="../../output/" ../../'
        - 'make libgltf'
        - 'cd ../'
        - 'cd ../'
        - 'cd ../../'
        - 'mkdir -p output/lib/ios/os'
        - 'cp -v external/libgltf/build/os/output/lib/macos/libgltf.a output/lib/ios/os/'
        - 'mkdir -p output/lib/ios/simulator'
        - 'cp -v external/libgltf/build/simulator/output/lib/macos/libgltf.a output/lib/ios/simulator/'
        - 'mkdir -p output/lib/ios/watchos'
        - 'cp -v external/libgltf/build/watchos/output/lib/macos/libgltf.a output/lib/ios/watchos/'
    artifacts:
        name: "libgltf.ios.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - output/lib/*
    tags:
        - macos
        - gcc
        - cmake
        - make
        - ios

package_ue4.10:
    stage: package
    script:
        - 'rm -rf libgltf_ue4/ && mkdir -p libgltf_ue4/'
        - 'cp README.md libgltf_ue4/'
        - 'cp LICENSE.md libgltf_ue4/'
        - 'cp libgltf_ue4.10.Build.cs libgltf_ue4/libgltf_ue4.Build.cs'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/'
        - 'cp external/libgltf/README.md libgltf_ue4/libgltf-0.1.6/'
        - 'cp external/libgltf/LICENSE.md libgltf_ue4/libgltf-0.1.6/'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/include/libgltf/'
        - 'cp -R external/libgltf/include/ libgltf_ue4/libgltf-0.1.6/'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/lib/'
        - 'cp -R output/lib/ libgltf_ue4/libgltf-0.1.6/'
    dependencies:
        - compile.windows.vs2019
        - compile.linux
        - compile.macos
        - compile.android
        - compile.ios
    artifacts:
        name: "libgltf_ue4.10.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - libgltf_ue4/*
    tags:
        - linux

libgltf_ue4.10:
    stage: deploy
    script:
        - 'rm -rf $CI_JOB_NAME/'
        - 'mv ./libgltf_ue4 ./$CI_JOB_NAME'
        - 'butler login'
        - 'butler push ./$CI_JOB_NAME c4gio/libgltf-ue4:ue4.10'
        - 'butler logout'
    artifacts:
        name: "$CI_JOB_NAME.$CI_PIPELINE_ID"
        expire_in: 1 year
        paths:
            - $CI_JOB_NAME/*
    when: manual
    dependencies:
        - package_ue4.10
    tags:
        - linux
        - itchio
        - butler

package_ue4.16:
    stage: package
    script:
        - 'rm -rf libgltf_ue4/ && mkdir -p libgltf_ue4/'
        - 'cp README.md libgltf_ue4/'
        - 'cp LICENSE.md libgltf_ue4/'
        - 'cp libgltf_ue4.16.Build.cs libgltf_ue4/libgltf_ue4.Build.cs'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/'
        - 'cp external/libgltf/README.md libgltf_ue4/libgltf-0.1.6/'
        - 'cp external/libgltf/LICENSE.md libgltf_ue4/libgltf-0.1.6/'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/include/libgltf/'
        - 'cp -R external/libgltf/include/ libgltf_ue4/libgltf-0.1.6/'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/lib/'
        - 'cp -R output/lib/ libgltf_ue4/libgltf-0.1.6/'
    dependencies:
        - compile.windows.vs2019
        - compile.linux
        - compile.macos
        - compile.android
        - compile.ios
    artifacts:
        name: "libgltf_ue4.16.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - libgltf_ue4/*
    tags:
        - linux

libgltf_ue4.16:
    stage: deploy
    script:
        - 'rm -rf $CI_JOB_NAME/'
        - 'mv ./libgltf_ue4 ./$CI_JOB_NAME'
        - 'butler login'
        - 'butler push ./$CI_JOB_NAME c4gio/libgltf-ue4:ue4.16'
        - 'butler logout'
    artifacts:
        name: "$CI_JOB_NAME.$CI_PIPELINE_ID"
        expire_in: 1 year
        paths:
            - $CI_JOB_NAME/*
    when: manual
    dependencies:
        - package_ue4.16
    tags:
        - linux
        - itchio
        - butler

package_ue4.19:
    stage: package
    script:
        - 'rm -rf libgltf_ue4/ && mkdir -p libgltf_ue4/'
        - 'cp README.md libgltf_ue4/'
        - 'cp LICENSE.md libgltf_ue4/'
        - 'cp libgltf_ue4.19.Build.cs libgltf_ue4/libgltf_ue4.Build.cs'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/'
        - 'cp external/libgltf/README.md libgltf_ue4/libgltf-0.1.6/'
        - 'cp external/libgltf/LICENSE.md libgltf_ue4/libgltf-0.1.6/'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/include/libgltf/'
        - 'cp -R external/libgltf/include/ libgltf_ue4/libgltf-0.1.6/'
        - 'mkdir -p libgltf_ue4/libgltf-0.1.6/lib/'
        - 'cp -R output/lib/ libgltf_ue4/libgltf-0.1.6/'
    dependencies:
        - compile.windows.vs2019
        - compile.linux
        - compile.macos
        - compile.android
        - compile.ios
    artifacts:
        name: "libgltf_ue4.19.$CI_PIPELINE_ID.$CI_JOB_ID"
        expire_in: 1 month
        paths:
            - libgltf_ue4/*
    tags:
        - linux

libgltf_ue4.19:
    stage: deploy
    script:
        - 'rm -rf $CI_JOB_NAME/'
        - 'mv ./libgltf_ue4 ./$CI_JOB_NAME'
        - 'butler login'
        - 'butler push ./$CI_JOB_NAME c4gio/libgltf-ue4:ue4.19'
        - 'butler logout'
    artifacts:
        name: "$CI_JOB_NAME.$CI_PIPELINE_ID"
        expire_in: 1 year
        paths:
            - $CI_JOB_NAME/*
    when: manual
    dependencies:
        - package_ue4.19
    tags:
        - linux
        - itchio
        - butler
